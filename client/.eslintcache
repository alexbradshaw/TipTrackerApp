[{"C:\\Users\\alexi\\repos\\TipTrackerApp\\client\\src\\index.js":"1","C:\\Users\\alexi\\repos\\TipTrackerApp\\client\\src\\App.js":"2","C:\\Users\\alexi\\repos\\TipTrackerApp\\client\\src\\reportWebVitals.js":"3","C:\\Users\\alexi\\repos\\TipTrackerApp\\client\\src\\components\\Settings\\index.js":"4","C:\\Users\\alexi\\repos\\TipTrackerApp\\client\\src\\components\\Graph\\index.js":"5","C:\\Users\\alexi\\repos\\TipTrackerApp\\client\\src\\components\\Home\\index.js":"6","C:\\Users\\alexi\\repos\\TipTrackerApp\\client\\src\\components\\Register\\index.js":"7","C:\\Users\\alexi\\repos\\TipTrackerApp\\client\\src\\components\\News\\index.js":"8","C:\\Users\\alexi\\repos\\TipTrackerApp\\client\\src\\components\\MyTips\\index.js":"9","C:\\Users\\alexi\\repos\\TipTrackerApp\\client\\src\\utils\\queries.js":"10","C:\\Users\\alexi\\repos\\TipTrackerApp\\client\\src\\components\\NavBar\\index.js":"11","C:\\Users\\alexi\\repos\\TipTrackerApp\\client\\src\\components\\TipModal\\index.js":"12","C:\\Users\\alexi\\repos\\TipTrackerApp\\client\\src\\components\\Footer\\index.js":"13"},{"size":517,"mtime":1627942927685,"results":"14","hashOfConfig":"15"},{"size":1331,"mtime":1628534758643,"results":"16","hashOfConfig":"15"},{"size":375,"mtime":1627942927686,"results":"17","hashOfConfig":"15"},{"size":253,"mtime":1628534758651,"results":"18","hashOfConfig":"15"},{"size":1474,"mtime":1628534758645,"results":"19","hashOfConfig":"15"},{"size":1388,"mtime":1628534758646,"results":"20","hashOfConfig":"15"},{"size":1416,"mtime":1628534758650,"results":"21","hashOfConfig":"15"},{"size":4424,"mtime":1628534758649,"results":"22","hashOfConfig":"15"},{"size":985,"mtime":1628541305619,"results":"23","hashOfConfig":"15"},{"size":280,"mtime":1628534758652,"results":"24","hashOfConfig":"15"},{"size":321,"mtime":1628534758648,"results":"25","hashOfConfig":"15"},{"size":1068,"mtime":1628538087992,"results":"26","hashOfConfig":"15"},{"size":135,"mtime":1628534758644,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1dk18t9",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\alexi\\repos\\TipTrackerApp\\client\\src\\index.js",[],["57","58"],"C:\\Users\\alexi\\repos\\TipTrackerApp\\client\\src\\App.js",[],"C:\\Users\\alexi\\repos\\TipTrackerApp\\client\\src\\reportWebVitals.js",[],"C:\\Users\\alexi\\repos\\TipTrackerApp\\client\\src\\components\\Settings\\index.js",[],"C:\\Users\\alexi\\repos\\TipTrackerApp\\client\\src\\components\\Graph\\index.js",[],"C:\\Users\\alexi\\repos\\TipTrackerApp\\client\\src\\components\\Home\\index.js",[],"C:\\Users\\alexi\\repos\\TipTrackerApp\\client\\src\\components\\Register\\index.js",[],"C:\\Users\\alexi\\repos\\TipTrackerApp\\client\\src\\components\\News\\index.js",["59","60"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\n\r\nimport \"./index.css\";\r\nimport navBar from \"../NavBar\";\r\n\r\nrequire(\"dotenv\").config();\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nconst GetNews = () => {\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [articles, setArticles] = useState([]);\r\n\r\n  console.log(articles);\r\n\r\n  useEffect(() => {\r\n    const APIKEY = process.env.NYT_APIKEY;\r\n    fetch(\r\n      `https://api.nytimes.com/svc/search/v2/articlesearch.json?fq=section_name:(\"Your Money\")&sort=newest&api-key=bSAhQ4HUGXtpkH7xVjlrgXALMEWxr35z`\r\n    )\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          setIsLoaded(true);\r\n          console.log(result);\r\n          //   setArticles(result);\r\n          const articleData = result.response.docs.map((article) => ({\r\n            _id: article._id,\r\n            headline: article.headline.main,\r\n            abstract: article.abstract,\r\n            pub_date: article.pub_date,\r\n            byline: article.byline.original,\r\n            snippet: article.snippet,\r\n            web_url: article.web_url,\r\n            section_name: article.section_name,\r\n            image: article.multimedia?.[19]?.url\r\n          }));\r\n\r\n          setArticles(articleData);\r\n        },\r\n\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        }\r\n      );\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  if (error) {\r\n    return <div>Error: {error.message}</div>;\r\n  } else if (!isLoaded) {\r\n    return <div>Loading...</div>;\r\n  } else {\r\n    return (\r\n      <div className=\"news\">\r\n        <h2>News</h2>\r\n        <ol>\r\n          {articles.map((article) => (\r\n            <li key={article._id}>\r\n              <Grid container spacing={0}>\r\n                <Grid item xs={2}>\r\n                  <Card className={classes.root}>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      {article.pub_date}\r\n                    </Typography>\r\n                  </Card>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Card className={classes.root}>\r\n                    <CardContent>\r\n                      <Typography\r\n                        className={classes.title}\r\n                        color=\"textSecondary\"\r\n                        gutterBottom\r\n                      >\r\n                        {article.section_name}\r\n                      </Typography>\r\n                      <Typography variant=\"h5\" component=\"h2\">\r\n                        {article.headline}\r\n                      </Typography>\r\n\r\n                      <Typography variant=\"body2\" component=\"p\">\r\n                        {article.snippet}\r\n                      </Typography>\r\n                      <Typography className={classes.pos} color=\"textSecondary\">\r\n                        {article.byline}\r\n                      </Typography>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                      <Button size=\"small\" href={article.web_url}>\r\n                        Read more\r\n                      </Button>\r\n                    </CardActions>\r\n                  </Card>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <CardMedia\r\n                      className={classes.media}\r\n                      component=\"img\"\r\n                      src=\"https://nytimes.com/${article.image}\" \r\n                      alt=\"news-img\"\r\n                    />\r\n                </Grid>\r\n              </Grid>\r\n            </li>\r\n          ))}\r\n        </ol>\r\n        {navBar}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n// const News = () => {\r\n//   return (\r\n//     <div className=\"news\">\r\n//       <h2>News</h2>\r\n//       {navBar}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default News;\r\n\r\nexport default GetNews;\r\n","C:\\Users\\alexi\\repos\\TipTrackerApp\\client\\src\\components\\MyTips\\index.js",["61","62","63"],"C:\\Users\\alexi\\repos\\TipTrackerApp\\client\\src\\utils\\queries.js",[],"C:\\Users\\alexi\\repos\\TipTrackerApp\\client\\src\\components\\NavBar\\index.js",[],"C:\\Users\\alexi\\repos\\TipTrackerApp\\client\\src\\components\\TipModal\\index.js",["64"],"import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport './index.css';\r\n\r\nconst TipEntry = (props) => {\r\n  let {\r\n    buttonLabel,\r\n    className\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(true);\r\n\r\n  const toggle = () => setModal(!modal);\r\n  buttonLabel = 'Enter Tips';\r\n  \r\n  return (\r\n    <div>\r\n      {/* <Button color=\"danger\" onClick={toggle}>{buttonLabel}</Button> */}\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>Enter Tips</ModalHeader>\r\n        <ModalBody>\r\n            <span className='p-1'>$</span>\r\n            <input className='tip-entry' type=\"text\" placeholder='Enter Tip Here'/>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={toggle}>Submit Tips</Button>{' '}\r\n          <Button color=\"secondary\" onClick={toggle}>Exit</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TipEntry;\r\n","C:\\Users\\alexi\\repos\\TipTrackerApp\\client\\src\\components\\Footer\\index.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":37,"column":11,"nodeType":"71","messageId":"72","endLine":37,"endColumn":17},{"ruleId":"73","severity":1,"message":"74","line":122,"column":27,"nodeType":"75","messageId":"76","endLine":122,"endColumn":65},{"ruleId":"69","severity":1,"message":"77","line":9,"column":12,"nodeType":"71","messageId":"72","endLine":9,"endColumn":16},{"ruleId":"69","severity":1,"message":"78","line":9,"column":18,"nodeType":"71","messageId":"72","endLine":9,"endColumn":25},{"ruleId":"79","severity":1,"message":"80","line":14,"column":19,"nodeType":"81","messageId":"82","endLine":14,"endColumn":21},{"ruleId":"69","severity":1,"message":"83","line":15,"column":3,"nodeType":"71","messageId":"72","endLine":15,"endColumn":14},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'APIKEY' is assigned a value but never used.","Identifier","unusedVar","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'show' is assigned a value but never used.","'setShow' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'buttonLabel' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]